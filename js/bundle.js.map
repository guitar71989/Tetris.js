{"version":3,"sources":["webpack/bootstrap b2af6a8aae2aa47cee6a","./js/main.js","./js/tetris-view.js","./lib/board.js","./lib/coord.js","./lib/piece.js"],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,uBAAe;AACf;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;;;;;;ACtCA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA,EAAC;;;;;;;ACTD;AACA;;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,SAAQ;AACR;AACA;AACA;AACA;AACA;;;AAGA;AACA;;AAEA,oBAAmB,uBAAuB;AAC1C,2BAA0B,EAAE;AAC5B,sBAAqB,sBAAsB;AAC3C,8BAA6B,KAAK,QAAQ,EAAE;AAC5C;AACA;AACA;;AAEA;AACA;;AAEA;;;;AAIA;;AAEA;;;;;;;AC/CA;AACA;;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,oBAAmB,aAAa;AAChC;AACA,sBAAqB,WAAW;AAChC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;;;;;;;ACnCA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;;;;;;ACnBA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,MAAK;AACL;;AAEA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;;AAEA;AACA,kBAAiB,SAAS,YAAY,SAAS;AAC/C,oBAAmB,gBAAgB;AACnC,kBAAiB,SAAS,YAAY,SAAS;AAC/C;AACA;;AAEA;AACA;AACA;AACA,MAAK;AACL;;AAEA;AACA,kBAAiB,SAAS,YAAY,SAAS;AAC/C,uBAAsB,gBAAgB;AACtC,kBAAiB,SAAS,YAAY,SAAS;AAC/C;AACA;;;AAGA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,MAAK;;;AAGL;AACA;AACA,QAAO;;;AAGP;AACA,yBAAwB,SAAS,YAAY,SAAS;AACtD;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;;AAEA;;AAEA","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/js/\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap b2af6a8aae2aa47cee6a\n **/","const View = require('./tetris-view.js');\nconst Piece = require('./../lib/piece.js');\n\nwindow.Piece = Piece;\n\n$( () => {\n  const rootEl = $('.tetris-game');\n  new View(rootEl);\n\n});\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./js/main.js\n ** module id = 0\n ** module chunks = 0\n **/","const Board = require('./../lib/board.js');\nconst Piece = require('./../lib/piece.js');\n\n\nclass View {\n  constructor($el) {\n    this.$el = $el;\n    this.board = new Board;\n    this.setupGrid();\n\n    const currentPiece = new Piece;\n    window.currentPiece = currentPiece;\n\n    window.setInterval(currentPiece.gravity, 500);\n\n    $(window).keydown(function (e) {\n       if (e.keyCode === 37) {\n           e.preventDefault();\n           currentPiece.move('left');\n       } else if (e.keyCode === 39) {\n           e.preventDefault();\n           currentPiece.move('right');\n       }\n     }\n   );}\n\n\n  setupGrid() {\n    let html = \"\";\n\n    for (let i = 0; i < this.board.height; i++) {\n      html += `<ul data=${i} >`;\n      for (var j = 0; j < this.board.width; j++) {\n        html += `<li empty=${true} data=${j}></li>`;\n      }\n      html += \"</ul>\";\n    }\n\n    this.$el.html(html);\n    this.$li = this.$el.find(\"li\");\n\n  }\n\n\n\n}\n\nmodule.exports = View;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./js/tetris-view.js\n ** module id = 1\n ** module chunks = 0\n **/","const Piece = require('./piece.js');\nconst Coord = require('./coord.js');\n\n\nclass Board {\n  constructor(height = 20, width = 10){\n    this.height = height;\n    this.width = width;\n  }\n\n  setupGrid(height, width) {\n    const grid = [];\n    for (var i = 0; i < height ; i++) {\n      const row = [];\n      for (var j = 0; j < width; j++) {\n        row.push(Board.BLANK_SYMBOL);\n      }\n      grid.push(row);\n    }\n    return grid;\n  }\n\n  render() {\n    const grid = Board.setupGrid(this.height, this.width);\n\n  }\n\n  validPosition(coord){\n    return (coord.i >= 0) && (coord.i < this.width) &&\n      (coord.j >= 0) && (coord.j < this.height);\n  }\n}\n\nBoard.BLANK_SYMBOL = \".\";\n\nmodule.exports = Board;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./lib/board.js\n ** module id = 2\n ** module chunks = 0\n **/","class Coord {\n  constructor(i, j) {\n    this.i = i;\n    this.j = j;\n  }\n\n  equals(coord2) {\n      return (this.i == coord2.i) && (this.j == coord2.j);\n  }\n\n  isOpposite(coord2) {\n    return (this.i == (-1 * coord2.i)) && (this.j == (-1 * coord2.j));\n  }\n\n  plus(coord2) {\n    return new Coord(this.i + coord2.i, this.j + coord2.j);\n  }\n}\n\nmodule.exports = Coord;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./lib/coord.js\n ** module id = 4\n ** module chunks = 0\n **/","const Coord = require('./coord.js');\n\nconst SHAPES = [\n  [\"I\", [[0,5], [1, 5], [2, 5], [3, 5]], \"red\"],\n  [\"J\", [[0,4], [0, 5], [1, 4], [1,5]], \"yellow\"],\n  [\"L\", [[0,4], [0, 5], [1, 5], [2,5]], \"purple\"],\n  [\"O\", [[0,4], [0, 5], [1, 4], [1,5]], \"blue\"],\n  [\"S\", [[0,5], [1, 5], [1, 4], [2, 4]], \"orange\"],\n  [\"T\", [[0,5], [1, 4], [1, 5], [2,5]], \"green\"],\n  [\"Z\", [[0,4], [0, 5], [1, 5], [1,6]], \"grey\"],\n];\n\nconst MOVES = {\n  LEFT: \"left\",\n  RIGHT: \"right\",\n  DOWN: \"down\",\n  ROTATE_LEFT: \"rotate_left\"\n};\n\n\n\nclass Piece {\n  constructor () {\n    this.randPiece = SHAPES[Math.floor(Math.random() * SHAPES.length)];\n    this.pieceColor = this.randPiece[2];\n    this.pieceCoords = this.randPiece[1];\n    this.occupyCell = this.occupyCell.bind(this);\n    this.occupyCells();\n  }\n\n  occupyCells(){\n    this.pieceCoords.forEach( (coord) => {\n      this.occupyCell(coord);\n    });\n  }\n\n  gravity(){\n    if (this.currentPiece.move(\"down\")) {\n      // window.currentPiece.move(\"down\");\n    } else {\n      this.currentPiece = new Piece();\n      window.currentPiece = this.currentPiece;\n    }\n  }\n\n  occupyCell(coord) {\n    $(`ul[data=${coord[0]}] li[data=${coord[1]}]`)\n      .addClass(`${this.pieceColor}`);\n    $(`ul[data=${coord[0]}] li[data=${coord[1]}]`)\n      .attr('empty', 'false');\n  }\n\n  unoccupyCells(){\n    this.pieceCoords.forEach( (coord) => {\n      this.unoccupyCell(coord);\n    });\n  }\n\n  unoccupyCell(coord) {\n    $(`ul[data=${coord[0]}] li[data=${coord[1]}]`)\n      .removeClass(`${this.pieceColor}`);\n    $(`ul[data=${coord[0]}] li[data=${coord[1]}]`)\n      .attr('empty', 'true');\n  }\n\n\n  move(direction){\n    let newCoords;\n\n    switch (direction) {\n      case MOVES.LEFT: {\n        newCoords = this.pieceCoords.map(\n          (coord) => ([coord[0], (coord[1] - 1)])\n        );\n        break;\n      }\n      case MOVES.RIGHT: {\n        newCoords = this.pieceCoords.map(\n         (coord) => ([coord[0], (coord[1] + 1)])\n       );\n       break;\n      }\n      case MOVES.DOWN: {\n        newCoords = this.pieceCoords.map(\n         (coord) => ([coord[0] + 1, (coord[1])])\n       );\n       break;\n     }\n      default:\n    }\n    const validMove = this.validMove(this.pieceCoords, newCoords);\n\n    if(validMove) {\n      this.unoccupyCells();\n      this.pieceCoords = newCoords;\n      this.occupyCells();\n    }\n    return validMove;\n  }\n\n  validMove(oldCoords, newCoords) {\n    let valid = true;\n\n    const oldCoordsStringify = oldCoords.map( (coord) => {\n      return JSON.stringify(coord);\n    });\n\n\n      const filteredCoords = newCoords.filter( (coord) => {\n        return !oldCoordsStringify.includes(JSON.stringify(coord));\n      });\n\n\n    filteredCoords.forEach( (coord) => {\n      if (($(`ul[data=${coord[0]}] li[data=${coord[1]}]`).attr('empty') !== \"true\")\n        || coord[1] < 0\n          || coord[1] > 9) {\n          valid = false;\n          return valid;\n        }\n    });\n    return valid;\n  }\n\n}\n\nmodule.exports = Piece;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./lib/piece.js\n ** module id = 5\n ** module chunks = 0\n **/"],"sourceRoot":""}